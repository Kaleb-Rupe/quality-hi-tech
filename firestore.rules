rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if the user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if the user is an admin
    function isAdmin() {
      return isAuthenticated() && (request.auth.token.admin == true || request.auth.token.superadmin == true);
    }

    // Helper function to check if the user is a superadmin
    function isSuperAdmin() {
      return isAuthenticated() && request.auth.token.superadmin == true;
    }

    // Users collection
    match /users/{userId} {
      allow read: if isAuthenticated() && (request.auth.uid == userId || isAdmin());
      allow write: if isAuthenticated() && request.auth.uid == userId;
      allow create, update, delete: if isAdmin();
    }

    // LoginAttempts collection
    match /loginAttempts/{document=**} {
      allow read, write: if isAdmin();
    }

    // Activities collection
    match /activities/{activityId} {
      allow read: if isAdmin();
      allow write: if isAuthenticated();
    }

    // Add more collection-specific rules as needed
  }
}